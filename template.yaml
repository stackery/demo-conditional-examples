AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  UserServicesTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-UserServicesTopic
      Subscription:
        - Endpoint: !GetAtt NewQueue.Arn
          Protocol: sqs
    Metadata:
      StackeryName: UserServicesTopic
  NewQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-NewQueue
    Metadata:
      StackeryName: NewQueue
  UserServicesTopicToNewQueuePermission:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt NewQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref UserServicesTopic
      Queues:
        - !Ref NewQueue
  MicroService25:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-MicroService25
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: MicroService25
      CodeUri: src/MicroService25
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
      Events:
        Topic:
          Type: SNS
          Properties:
            Topic: !Ref UserServicesTopic
    Metadata:
      StackeryName: MicroService25
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)